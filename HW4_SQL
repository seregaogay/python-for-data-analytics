  --task1 (lesson5)
-- Компьютерная фирма: Сделать view (pages_all_products), в которой будет постраничная разбивка всех продуктов (не более двух продуктов на одной странице). Вывод: все данные из laptop, номер страницы, список всех страниц

sample:
1 1
2 1
1 2
2 2
1 3
2 3
 
select *
from pages_all_products

drop view pages_all_products

create view pages_all_products as 
select *,
case when rn % 2 = 0 then rn /2 else rn /2 +1 end as page_num,
case when rn % 2 = 0 then 2 else 1 end as position from (
select *, row_number (*) over (order by price desc) as rn from laptop) a

--task2 (lesson5)
-- Компьютерная фирма: Сделать view (distribution_by_type), в рамках которого будет процентное соотношение всех товаров по типу устройства. Вывод: производитель, тип, процент (%)

create   view distribution_by_type as
select  distinct maker, type, cast(rn as float) / cast (total as float) as density
from ( select *, 
count (*) over (partition by maker, type ) as rn,
count(*) over ( partition by maker) as total
from product) a

select *
from distribution_by_type

--task3 (lesson5)
-- Компьютерная фирма: Сделать на базе предыдущенр view график - круговую диаграмму. Пример https://plotly.com/python/histograms/

в отдельном ноутбуке HW4_SQL_Colab

--task4 (lesson5)
-- Корабли: Сделать копию таблицы ships (ships_two_words), но название корабля должно состоять из двух слов

create table ships_two_words as
select * 
from ships s 
where name like '% %'

select *
from ships_two_words

--task5 (lesson5)
-- Корабли: Вывести список кораблей, у которых class отсутствует (IS NULL) и название начинается с буквы "S"

select *
from
	(select ship from outcomes
	union
	select name from ships) a
left join ships
on a.ship = ships."name"
where class is null
and ship like 'S%'


--task6 (lesson5)
-- Компьютерная фирма: Вывести все принтеры производителя = 'A' со стоимостью выше средней по принтерам производителя = 'C' и три самых дорогих (через оконные функции). Вывести model

select  model
from (select p3.model, p3.price ,
row_number () over (order by price desc) as rn
from printer p3 join product p4 on p3.model = p4.model
where price >(select case when avg(price) is null then 0 else avg(price) end avg_price from printer p join product p2 on p.model = p2.model where maker = 'C')
and maker = 'A') as a
where rn < 4
